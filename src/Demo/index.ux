<template>
  <!-- template里只能有一个根节点 -->
  <div class="demo-page">
    <text class="title">正在进行的任务</text>
    <!--已经创建的任务-->
    <div class="tutorial-row" for="{{toDoList}}">
      <input  if="{{!$item.done}}" type="checkbox" checked="{{$item.done}}"  onchange="changeCheckbox($idx)" />
      <text  if="{{!$item.done}}">{{$item.name}} - {{$item.startDate}} {{$item.startTime}}</text>
    </div>

    <!-- 点击跳转创建日程 -->
    <input class="btn" type="button" value="创建日程" onclick="routeDetail" />

    <div style="height: 100px"></div>

    <text class="title">已完成的任务</text>
    <!--已经完成的任务-->
    <div class="tutorial-row" for="{{toDoList}}">
      <input  if="{{$item.done}}" type="checkbox" checked="{{$item.done}}"  onchange="changeCheckbox($idx)"/>
      <text  if="{{$item.done}}">{{$item.name}} - {{$item.startDate}} {{$item.startTime}} </text>
    </div>
    <!--<text>{{task.name}}</text>-->


  </div>
</template>

<style>
  .demo-page {
    flex-direction: column;
    /*justify-content: center;*/
    /*align-items: center;*/
  }

  .title {
    font-size: 40px;
    text-align: center;
  }

  .btn {
    width: 750px;
    height: 86px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #09ba07;
    font-size: 30px;
    color: #ffffff;
  }
</style>

<script>
  import router from '@system.router'

  export default {
    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
    private: {
      title: '高效日程',
        toDoList:[
          {
            name: '开会',
            startDate: '',
            startTime: '',
            startDateTime: '',
            endDate: '',
            endTime: '',
            endDateTime: '',
            tipsTime: '15',
            done: false
          },
          {
            name: '工作汇报',
            startDate: '',
            startTime: '',
            startDateTime: '',
            endDate: '',
            endTime: '',
            endDateTime: '',
            tipsTime: '15',
            done: false
          },
          {
            name: '打电话给客户',
            startDate: '',
            startTime: '',
            startDateTime: '',
            endDate: '',
            endTime: '',
            endDateTime: '',
            tipsTime: '15',
            done: true
          }
        ]
    },
    // protected: {
    //   task: {
    //     name: '示例任务',
    //     startDate: '',
    //     startTime: '',
    //     startDateTime: '',
    //     endDate: '',
    //     endTime: '',
    //     endDateTime: '',
    //     tipsTime: '15',
    //     done: false
    //   }
    // },
    onShow () {
      // 页面被切换显示时，从数据中检查是否有页面B传递来的数据
      if (this.$app.$data.dataPageB && this.$app.$data.dataPageB.gotoPage === 'pageA') {
        // 从数据中获取回传给本页面的数据
        const data = this.$app.$data.dataPageB.params
        this.toDoList.push(data.task)
      }
    },
    routeDetail () {
      // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
      router.push ({
        uri: '/DemoDetail'
      })
    },
    changeCheckbox(idx,e){
      this.toDoList[idx].done = !this.toDoList[idx].done
    },
    onInit() {
      this.$on('task', this.taskHandler)
    },
    taskHandler(){
      this.toDoList.push(this.task)
    }
  }
</script>
